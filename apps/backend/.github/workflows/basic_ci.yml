name: Basic Typescript Continuous Integration

on:
  pull_request:
    branches: [main]

jobs:
  TypeScriptCheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Cache Node Modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup NodeJs
        uses: actions/setup-node@v1
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: Run Typescript Lint
        run: npm run lint

      - name: Run Prettier
        run: npm run prettier

      - name: Run Type Check
        run: npm run tsc

  PythonCheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # Cache Pipenv Dependencies
      - name: Cache Pipenv Dependencies
        id: cache-pip
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            .venv
          key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Setup Pipenv
        run: |
          python -m pip install pipenv

      - name: Lock Python Layer Dependencies
        working-directory: app/layers/third_party
        run: |
          pipenv lock
          rm -rf .venv

      - name: Install Python Dependencies
        run: |
          pipenv sync && pipenv install --dev

      - name: Check Formatting with Black
        run: |
          pipenv run python -m black app --check

      - name: Linting With MyPy
        run: |
          pipenv run python -m mypy app

      - name: Run PyTest
        run: |
          pipenv run python -m pytest app/tests --cov=app/src -n 3 > pytest-coverage.txt

      - name: Pytest Coverage Comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
